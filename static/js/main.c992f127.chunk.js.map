{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Movie/Movie.js","components/MovieList/MovieList.js","components/TheShoppies/TheShoppies.js","App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","searchTerm","handleChange","bind","evt","this","setState","target","value","axios","get","catch","error","alert","response","console","refreshMovies","className","htmlFor","type","id","name","placeholder","onChange","Component","Movie","handleNomination","nominateMovie","handleRemove","removeNomination","year","nominated","isNomination","imgSrc","src","alt","disabled","onClick","MovieList","movies","header","TheShoppies","nominations","showModal","data","Response","Search","nomination","filter","movie","imdbID","checkOpenModal","nom","length","handleSubmitModal","handleCloseModal","movieList","map","some","nominationsFull","Title","Year","Poster","nominatedMovies","Modal","show","onHide","animation","Header","Footer","Button","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c992f127.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './SearchBar.css'\nimport axios from \"axios\"\n\nconst omdbApiUrl = \"https://www.omdbapi.com/?apikey=8b01dc14&\";\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    state = {\n        searchTerm: ''\n    }\n\n    async handleChange(evt) {\n        await this.setState({\n            searchTerm: evt.target.value\n        })\n\n        const response = await axios.get(`${omdbApiUrl}s=${this.state.searchTerm}&type=movie`).catch((error) => {\n            alert(`Fetching movies failed: ${error.response}`)\n            console.error(error.response)\n            return;\n        })\n\n        this.props.refreshMovies(response, this.state.searchTerm)\n    }\n\n    render() {\n        return (\n            <div className=\"form-group has-search container w-50 SearchBar\">\n                <label htmlFor='searchTerm'>Movie title</label>\n                <span className=\"fa fa-search form-control-feedback\"></span>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"searchTerm\"\n                    name=\"searchTerm\"\n                    placeholder=\"Search for a movie to nominate\"\n                    value={this.state.searchTerm}\n                    onChange={this.handleChange}\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Movie.css'\n\nexport default class Movie extends Component {\n    handleNomination = () => {\n        this.props.nominateMovie(this.props.id)\n    }\n\n    handleRemove = () => {\n        this.props.removeNomination(this.props.id)\n    }\n\n    render() {\n        const { name, year, nominated, isNomination, imgSrc } = this.props\n\n        return (\n            <li className=\"Movie\">\n                <img\n                    src={imgSrc}\n                    alt={''}\n                    className=\"MoviePoster\"\n                />\n                <div className=\"MovieInfo\">\n                    <span>{name}</span>\n                    <span>{year}</span>\n                </div>\n                {\n                    isNomination ?\n                        <button disabled={nominated} onClick={this.handleRemove}>Remove</button>\n                        :\n                        <button disabled={nominated} onClick={this.handleNomination}>Nominate</button>\n                }\n            </li>\n        )\n    }\n}\n","import './MovieList.css'\n\nimport React from 'react'\n\nexport default function MovieList(props) {\n    const { movies, header } = props\n    return (\n        <div className=\"MovieList\">\n            <h5 className=\"MovieListHeader\">\n                {header}\n            </h5>\n            <ul className=\"list-group\">\n                {movies}\n            </ul>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport SearchBar from '../SearchBar/SearchBar'\nimport Movie from '../Movie/Movie'\nimport './TheShoppies.css'\nimport { Modal, Button } from 'react-bootstrap'\nimport MovieList from '../MovieList/MovieList'\n\nexport default class TheShoppies extends Component {\n    state = {\n        searchTerm: \"\",\n        movies: [],\n        nominations: [],\n        showModal: false\n    }\n\n    refreshMovies = (response, searchTerm) => {\n        const data = response.data\n\n        this.setState({\n            movies: data.Response !== \"False\" ? data.Search : [],\n            searchTerm: searchTerm\n        })\n    }\n\n    nominateMovie = id => {\n        const nomination = this.state.movies.filter(movie => movie.imdbID === id)\n\n        this.setState(state => ({\n            nominations: [...state.nominations, ...nomination]\n        }), () => { this.checkOpenModal() })\n    }\n\n    removeNomination = id => {\n        this.setState(state => ({\n            nominations: state.nominations.filter((nom) => nom.imdbID !== id)\n        }))\n    }\n\n    checkOpenModal = () => {\n        if (this.state.nominations.length === 5) {\n            this.setState({\n                showModal: true\n            })\n        }\n    }\n\n    handleSubmitModal = () => {\n        this.setState(state => ({\n            showModal: false,\n            nominations: []\n        }))\n    }\n\n    handleCloseModal = () => {\n        this.setState(state => ({\n            showModal: false\n        }))\n    }\n\n    render() {\n        const movieList = this.state.movies.map(movie => {\n            const nominated = this.state.nominations.some(nomination => nomination.imdbID === movie.imdbID)\n            const nominationsFull = this.state.nominations.length === 5\n            return (\n                <Movie\n                    key={movie.imdbID}\n                    id={movie.imdbID}\n                    name={movie.Title}\n                    year={movie.Year}\n                    imgSrc={movie.Poster}\n                    nominated={nominated || nominationsFull}\n                    isNomination={false}\n                    nominateMovie={this.nominateMovie}\n                />\n            )\n        })\n\n        const nominatedMovies = this.state.nominations.map(nomination => {\n            return (\n                <Movie\n                    key={nomination.imdbID}\n                    id={nomination.imdbID}\n                    name={nomination.Title}\n                    year={nomination.Year}\n                    imgSrc={nomination.Poster}\n                    isNomination={true}\n                    removeNomination={this.removeNomination}\n                />\n            )\n        })\n\n        return (\n            <div className=\"TheShoppies\">\n                <header className=\"TheShoppiesHeader\">\n                    The Shoppies\n                </header>\n                <SearchBar refreshMovies={this.refreshMovies} />\n                <div className=\"MovieListContainer\">\n                    <MovieList\n                        header={this.state.movies.length === 0 ? \"Results\" : `Results for \"${this.state.searchTerm}\"`}\n                        movies={movieList}\n                    />\n                    <MovieList\n                        header=\"Nominations\"\n                        movies={nominatedMovies}\n                    />\n                </div>\n\n                <Modal show={this.state.showModal} onHide={this.handleCloseModal} animation={false}>\n                    <Modal.Header>\n                        <Modal.Title>You're ready to submit this year's 5 nominations!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={this.handleSubmitModal}>\n                            Submit to the academy\n                        </Button>\n                        <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n                            I want to change my nominations\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div >\n        )\n    }\n}\n","import TheShoppies from '../components/TheShoppies/TheShoppies';\nimport './App.css'\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <TheShoppies />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}